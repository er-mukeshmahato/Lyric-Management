@*@model IEnumerable<LyricData.Models.SongLyric>*@
@model PaginatedList<LyricData.Models.SongLyric>

@{
    ViewData["Title"] = "Search";
}

<h5> Total Data:@ViewBag.searched</h5>
<h5> Total Match:@ViewBag.found</h5>
<h5> ExecutionTime:@ViewBag.time</h5>

<form asp-controller="SongLyrics" asp-action="Search" method="get">
    <p>
        <input type="text" name="word">
        <input type="submit" value="search" />
    </p>

</form>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Artist)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Views)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Lyrics)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Artist)
            </td>
            <td>

                <img src="~/Image/photo.jpg" style="max-height:150px;max-width:150px;" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Views)
            </td>
            <td>

                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @if (item.Lyrics.Length > 100)
                {
                @item.Lyrics.Substring(0, 100)
                }
                else
                @Html.DisplayFor(modelItem => item.Lyrics)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Lyrics)
                </td>*@
            <td>

                <a asp-action="Detail" asp-route-id="@item.Id">Details</a>

            </td>
        </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Search"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="abc+ @(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Search"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

